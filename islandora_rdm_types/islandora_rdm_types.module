<?php

/**
 * @file
 * Contains islandora_rdm_types.module.
 */

use Drupal\paragraphs\Entity\Paragraph;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function islandora_rdm_types_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the islandora_rdm_types module.
    case 'help.page.islandora_rdm_types':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Base content types for Islandora RDM') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function islandora_rdm_types_theme() {
  return [
    'node__islandora_rdm_dataset__rdm_citation' => [
      'template' => 'node--islandora-rdm-dataset--rdm-citation',
      'base hook' => 'node',
    ],
  ];
}

/**
 *
 */
function islandora_rdm_types_preprocess_node__islandora_rdm_dataset__rdm_citation(&$variables) {

  if (!$variables['node']->isNew()) {
    $target = $variables['node']->get('field_rdm_creator')
      ->getValue()[0]['target_id'];
    $p = Paragraph::load($target);

    $name = '';
    if ($p) {
      switch ($p->getType()) {
        case 'rdm_organization':
          $name = $p->get('field_rdm_organization_name')->getString();
          break;

        case 'rdm_person':
          $name = $p->get('field_rdm_personal_name')->getString();
          break;
      }
      $variables['cite_name'] = $name;
    }
  }
}

/**
 * Implements hook_rdf_namespaces().
 */
function islandora_rdm_types_rdf_namespaces() {
  return [
    'fabio' => 'http://purl.org/spar/fabio/',
    'datacite' => 'http://purl.org/spar/datacite/',
  ];
}

